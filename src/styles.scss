@use "@angular/material" as mat;
@use "../m3-theme.scss" as m3;

@include mat.core();

@tailwind base;
@tailwind utilities;

@mixin theme-colors($theme) {
  --primary-0: #{mat.get-theme-color($theme, primary, 0)};
  --primary-10: #{mat.get-theme-color($theme, primary, 10)};
  --primary-20: #{mat.get-theme-color($theme, primary, 20)};
  --primary-30: #{mat.get-theme-color($theme, primary, 30)};
  --primary-40: #{mat.get-theme-color($theme, primary, 40)};
  --primary-50: #{mat.get-theme-color($theme, primary, 50)};
  --primary-60: #{mat.get-theme-color($theme, primary, 60)};
  --primary-70: #{mat.get-theme-color($theme, primary, 70)};
  --primary-80: #{mat.get-theme-color($theme, primary, 80)};
  --primary-90: #{mat.get-theme-color($theme, primary, 90)};
  --primary-95: #{mat.get-theme-color($theme, primary, 95)};
  --primary-99: #{mat.get-theme-color($theme, primary, 99)};
  --primary-100: #{mat.get-theme-color($theme, primary, 100)};

  --primary: #{mat.get-theme-color($theme, primary)};
  --on-primary: #{mat.get-theme-color($theme, on-primary)};
  --primary-container: #{mat.get-theme-color($theme, primary-container)};
  --on-primary-container: #{mat.get-theme-color($theme, on-primary-container)};
  --primary-fixed: #{mat.get-theme-color($theme, primary-fixed)};
  --on-primary-fixed: #{mat.get-theme-color($theme, on-primary-fixed)};
  --primary-fixed-dim: #{mat.get-theme-color($theme, primary-fixed-dim)};
  --on-primary-fixed-variant: #{mat.get-theme-color(
      $theme,
      on-primary-fixed-variant
    )};

  --secondary: #{mat.get-theme-color($theme, secondary)};
  --on-secondary: #{mat.get-theme-color($theme, on-secondary)};
  --secondary-container: #{mat.get-theme-color($theme, secondary-container)};
  --on-secondary-container: #{mat.get-theme-color(
      $theme,
      on-secondary-container
    )};

  --error: #{mat.get-theme-color($theme, error)};
  --on-error: #{mat.get-theme-color($theme, on-error)};
  --error-container: #{mat.get-theme-color($theme, error-container)};
  --on-error-container: #{mat.get-theme-color($theme, on-error-container)};

  --tertiary: #{mat.get-theme-color($theme, tertiary)};
  --on-tertiary: #{mat.get-theme-color($theme, on-tertiary)};
  --tertiary-container: #{mat.get-theme-color($theme, tertiary-container)};
  --on-tertiary-container: #{mat.get-theme-color($theme, on-tertiary-container)};

  --surface: #{mat.get-theme-color($theme, surface)};
  --on-surface: #{mat.get-theme-color($theme, on-surface)};
  --surface-container: #{mat.get-theme-color($theme, surface-container)};
  --on-surface-variant: #{mat.get-theme-color($theme, on-surface-variant)};
}

@mixin buttons-variants($theme) {
  .secondary-button {
    @include mat.button-color($theme, $color-variant: secondary);
  }

  .tertiary-button {
    @include mat.button-color($theme, $color-variant: tertiary);
  }

  .warn-button {
    @include mat.button-color($theme, $color-variant: error);
  }

  button.tonal {
    background-color: mat.get-theme-color($theme, secondary-container);
    color: mat.get-theme-color($theme, on-secondary-container);
  }
}

:root {
    --font-nunito: "Nunito Sans", sans-serif;
  @include mat.all-component-themes(m3.$light-theme);
  @include theme-colors(m3.$light-theme);
  @include buttons-variants(m3.$light-theme);
  @include mat.typography-hierarchy(m3.$light-theme);

  .sidenav-scroll-wrapper {
    background-color: rgba(
      mat.get-theme-color(m3.$light-theme, primary-container),
      0.2
    );
  }
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: var(--font-nunito);
}
